{"version":3,"sources":["components/Mainpage.js","components/Navigation.js","components/Signin.js","components/Register.js","components/icong.png","components/Icon.js","components/Urlbar.js","components/Imagebox.js","components/Count.js","App.js","index.js"],"names":["Mainpage","Changepage","className","type","value","onClick","style","display","justifyContent","Navigation","isUser","Clean","Signin","props","Emailfield","event","setState","email","target","Passwordfield","password","Validation","state","loading","fetch","method","headers","body","JSON","stringify","then","res","json","data","incorrectCreds","Sign_in","id","htmlFor","name","onChange","disp","Component","Register","Namefield","test","error","Registered","invalidEmail","Icon","options","max","height","width","alt","src","icon","Urlbar","onDetect","Urlchange","Detectstate","placeholder","Imagebox","Box","url","heigh","top","toprow","right","rightcol","bottom","bottomrow","left","leftcol","Count","Name","Entries","particleParams","particles","number","density","enable","value_area","App","pagee","page","Calculation","boxy","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","box","detectstate","user","entries","user_data","resp","response","Object","assign","catch","err","console","log","nav","success","params","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7f7c1c45.chunk.js","sourcesContent":["const Mainpage = ({ Changepage }) => {\r\n\treturn(\r\n\t\t<div className=\"tc\">\r\n\t\t\t<h1>Hellooooooooo!</h1>\r\n\t\t\t<h1>I am Smartigo</h1> \r\n\t\t\t<h2>Enter an image URL and I will detect the face in it!!</h2>\r\n\t\t\t    <div className=\"center tc\">\r\n      \t\t\t<input \r\n      \t\t\t\tclassName=\"center tc b ph3 pv2 input-reset ba b--black bb grow pointer f6 dib\" \r\n      \t\t\t\ttype=\"submit\" \r\n      \t\t\t\tvalue=\"Sign in\"\r\n      \t\t\t\tonClick={ () => Changepage('signin') }\r\n      \t\t\t\t/>\r\n    \t\t\t</div>\r\n\r\n    \t\t\t<div className=\"center tc pt3\">\r\n      \t\t\t<input \r\n      \t\t\t\tclassName=\"center tc b ph3 pv2 input-reset ba b--black bb grow pointer f6 dib\" \r\n      \t\t\t\ttype=\"submit\" \r\n      \t\t\t\tvalue=\"register\"\r\n      \t\t\t\tonClick={ () => Changepage('register') }\r\n      \t\t\t\t/>\r\n    \t\t\t</div>\r\n\r\n    \t\t\t<nav style={{display:'flex', justifyContent:'center'}}>\r\n \t\t\t\t      <p    \r\n\t\t\t\t\t       className='pl3 black link underline dim black pointer pr3'\r\n\t\t\t\t\t       onClick={ () => Changepage('application') } >\r\n\t\t\t\t\t       skip\r\n\t\t\t\t      </p>\r\n\t\t\t    </nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Mainpage;","import React, {Fragment} from 'react';\r\n\r\nconst Navigation = ({ Changepage, isUser, Clean }) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t\t\r\n\t\t\t  {        isUser \r\n\t\t\t\t\t      ?\r\n\t\t\t\t      <p \r\n\t\t\t\t\t    onClick={Clean}    \r\n\t\t\t\t\t    className='link underline dim black pointer pr3'>\r\n\t\t\t\t\t    Sign out\r\n\t\t\t\t      </p>\r\n\t\t\t\t            :\r\n\t\t\t        <div>\r\n\t\t\t\t      <p \r\n\t\t\t\t        onClick={() => Changepage('signin')}    \r\n\t\t\t\t        className='link underline dim black pointer pr3'>\r\n\t\t\t\t        Sign in\r\n\t\t\t\t      </p>\r\n\r\n\t\t\t\t      <p \r\n\t\t\t\t        onClick={() => Changepage('register')}    \r\n\t\t\t\t        className='link underline dim black pointer pr3'>\r\n\t\t\t\t        register\r\n\t\t\t\t       </p>\r\n\t\t\t\t    </div>\r\n\t\t\t  }\r\n\t\t\t</nav>\r\n\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      loading: 'no',\r\n      incorrectCreds: ''\r\n    }\r\n  }\r\n\r\n  Emailfield = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  Passwordfield = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  Validation = () => {\r\n    if( !this.state.email || !this.state.password ){\r\n      this.setState({incorrectCreds: 'yes'})\r\n    }\r\n\r\n    else{\r\n      this.setState({loading: 'yes'})\r\n\r\n      fetch('https://shrouded-shelf-04134.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(data =>{\r\n        if(data === 'invalid creds'){\r\n          this.setState({loading: 'no'})\r\n          this.setState({incorrectCreds: 'yes'})\r\n        } \r\n        else {\r\n           this.props.Sign_in(data)\r\n        }\r\n      \r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  render(){\r\n    const disp = () => {\r\n      switch(this.state.loading){\r\n\r\n        case \"no\": return(\r\n          <> \r\n            <nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n            <p \r\n                className=\"f5 underline pointer tr link dim white db pr3\"\r\n                onClick={()=>this.props.Changepage('application')} >\r\n                skip\r\n            </p>\r\n            </nav>\r\n            <div className=\"br3 ba whitee black b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n              <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            \r\n                 <legend className=\"tc f4 fw6 ph0 mh0\">Sign In</legend>\r\n            \r\n                    <div className=\"mt3\">\r\n                \r\n                      <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                      <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\"\r\n                        onChange={this.Emailfield} />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                      <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                      <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\"\r\n                        onChange={this.Passwordfield} />\r\n                    </div>    \r\n                </fieldset>\r\n                    {    this.state.incorrectCreds \r\n                                ?\r\n                      <p className='tc pb2 red' >Incorrect credentials</p>\r\n                                :\r\n                                ''\r\n                    }\r\n                <div className=\"center tc\">\r\n                  <input \r\n                    className=\"center tc b ph3 pv2 input-reset ba b--black bb grow pointer f6 dib\" \r\n                    type=\"submit\" \r\n                    value=\"Sign in\"\r\n                    onClick={this.Validation} />\r\n                </div>   \r\n                <div className=\"lh-copy mt3\">\r\n                  <p \r\n                    className=\"underline f6 pointer tc link dim black db\"\r\n                    onClick={ ()=>this.props.Changepage('register')} >\r\n                    Register\r\n                  </p>\r\n                </div>\r\n               </div>\r\n              </main>\r\n            </div>\r\n          </>\r\n        )\r\n\r\n        case \"yes\": return(\r\n                      <div className=\"tc pt6\">\r\n                        <h1> Signing in...</h1>\r\n                        <h2> Please wait </h2>\r\n                      </div>\r\n        )\r\n\r\n        default: return <h1>Something went wrong. Please refresh the page</h1>\r\n      }\r\n    }\r\n\r\n    return( \r\n          <>\r\n            { disp() }\r\n          </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Signin;","import React, {Component} from 'react';\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      error: '',\r\n      invalidEmail: '',\r\n      loading: 'no'\r\n    }\r\n  }\r\n\r\n  Emailfield = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  Passwordfield = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  Namefield = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  Validation = () => {\r\n    if( !this.state.name || !this.state.email || !this.state.password) {\r\n      this.setState({error: 'not filled'})\r\n    }\r\n\r\n    else if(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(this.state.email)){\r\n\r\n        this.setState({loading: 'yes'})\r\n\r\n        fetch('https://shrouded-shelf-04134.herokuapp.com/register', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          name: this.state.name,\r\n          email: this.state.email,\r\n          password: this.state.password\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data=== 'unable to register') {\r\n              this.setState({loading: 'no'})\r\n              this.setState({error: 'unable to register'})\r\n            }\r\n            else {\r\n              this.props.Registered(data)\r\n            }\r\n          \r\n        })\r\n    }\r\n\r\n    else{\r\n      this.setState({invalidEmail: 'yes'})\r\n    }   \r\n}  \r\n\r\n  render() {\r\n    const disp = () => {\r\n      switch( this.state.loading ) {\r\n\r\n        case \"no\":  \r\n            return(  \r\n              <>\r\n                <nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n                  <p \r\n                    className=\"f5 underline pointer tr link dim white db pr3\"\r\n                    onClick={() => this.props.Changepage('application')} >\r\n                    skip\r\n                  </p>\r\n                </nav>\r\n                <div className=\"br3 ba whitee black b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                  <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                      <legend className=\"tc f4 fw6 ph0 mh0\">Register</legend>\r\n                      <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"Name\">Name</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\"\r\n                            name=\"Name\"  \r\n                            id=\"Name\"\r\n                            onChange={this.Namefield} />\r\n                      </div>\r\n                      <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                          className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                          type=\"email\" \r\n                          name=\"email-address\"  \r\n                          id=\"email-address\"\r\n                          onChange={this.Emailfield} />\r\n                      </div>\r\n                        {    this.state.invalidEmail\r\n                                ?\r\n                          <p className='pl2 pb2 red' >Please enter a valid email id</p>\r\n                                :\r\n                                ''\r\n                        }\r\n                      <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                          className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                          type=\"password\" \r\n                          name=\"password\"  \r\n                          id=\"password\"\r\n                          onChange={this.Passwordfield} />\r\n                      </div>\r\n                      </fieldset>\r\n                {    this.state.error === 'not filled' \r\n                                ?\r\n                  <p className='pl4 pb2 red' >Please fill all the fields</p>\r\n                                :\r\n                              this.state.error === 'unable to register'\r\n                                              ?\r\n                                              <>\r\n                          <p className='pl4 pb2 red' >Unable to register. Try with different values</p>\r\n                          \r\n                                              </> \r\n                                              :                   \r\n                                ''\r\n                }\r\n                <div className=\"center tc\">\r\n                  <input \r\n                    className=\"center tc b ph3 pv2 input-reset ba b--black bb grow pointer f6 dib\" \r\n                    type=\"submit\" \r\n                    value=\"Register\"\r\n                    onClick={this.Validation}/>\r\n                </div>   \r\n                <div className=\"lh-copy mt3\">\r\n                  <p \r\n                    className=\"underline f6 pointer tc link dim black db\"\r\n                    onClick={() =>this.props.Changepage('signin')}>\r\n                    Signin\r\n                  </p>\r\n                </div>\r\n                </div>\r\n                </main>\r\n                </div>\r\n              </>\r\n            )\r\n\r\n      case \"yes\": return(\r\n        <div className=\"tc pt6\">\r\n          <h1> Registering...</h1>\r\n          <h3> Please wait </h3>\r\n        </div>\r\n        )\r\n      \r\n      default: return <h1>Something went wrong. Please refresh the page</h1>\r\n      }\r\n    }\r\n\r\n  return(\r\n        <>\r\n          { disp() }\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/icong.fdfd3d56.png\";","import React, {Fragment} from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport icon from './icong.png';\r\n\r\nconst Icon = () => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='pl3 pt3 pb3' style={{ display:'flex', justifyContent:'center' }}>\r\n\t\t\t\t<Tilt className=\"Tilt shadow-3 urlbox \" options={{ max : 77 }} style={{ height: 110, width: 110 }} >\r\n \t\t\t\t\t<div className=\"Tilt-inner\"> \r\n \t\t\t\t\t\t<img  alt={'icon'} src={icon} />\r\n \t\t\t\t\t</div>\r\n\t\t\t\t</Tilt>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Icon;","import React, {Fragment} from 'react';\r\nimport './Urlbar.css';\r\n\r\nconst Urlbar = ({ onDetect,Urlchange, Detectstate }) =>{\r\n\tconst disp = () => {\r\n\t\tswitch(Detectstate) {\r\n\r\n\t\t\tcase 'default': return(\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p className='tc f3'>Enter an image url. I will detect the face..</p>\r\n\t\t\t\t\t</>\r\n\t\t\t)\r\n\r\n\t\t\tcase 'yes': return(\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p className='tc f3'>detecting...</p>\r\n\t\t\t\t\t</>\r\n\t\t\t)\r\n\r\n\t\t\tcase 'no': return(\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p className='tc f3'>Face not found</p>\r\n\t\t\t\t\t</>\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\tdefault: return <h1>Something went wrong. Please refresh the page</h1> \r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t{ disp() }\r\n\t\t\t\t<div className='center pa3 br3 shadow-2 urlbox' style={{width:'500px'}}>\r\n\t\t\t\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName='f6 pa2 w-70 urlinput center br2 ' \r\n\t\t\t\t\t\ttype='tex' \r\n\t\t\t\t\t\tplaceholder='Enter url here' \r\n\t\t\t        \tonChange={Urlchange}/>\r\n\r\n\t\t\t\t\t<button className='pointer w-30 grow f6 link ph3 pv2 dib black bg-light-purple'\r\n\t\t\t        \t\tonClick={onDetect}>\r\n\t\t\t        \tDetect\t\r\n\t\t\t        </button>\r\n\t\r\n\t\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Urlbar;","const Imagebox = ({ Box,url }) =>{\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className='center ma'>\r\n\t\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t\t<img id='inputimage' className='ba' alt='' src={url} width='350px' heigh='auto' />\r\n\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName='bounding-box' style={{top:Box.toprow, right:Box.rightcol , bottom:Box.bottomrow , left:Box.leftcol}} >\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Imagebox;","const Count = ({ Name,Entries }) =>{\r\n\tconst disp = () => {\r\n\t\tif(Name) {\r\n\t\t\treturn(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=' count f3 tc'>{`${Name}, your entry count is`}</div>\r\n\t\t\t\t\t<div className=' count f2 tc'>{`${Entries}`}</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn '';\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{ disp() }\r\n\t\t</>\r\n\t);\r\n\r\n}\r\n\r\nexport default Count;","import React, { Component } from 'react'; \r\nimport Particles from 'react-particles-js';\r\nimport './App.css';\r\nimport Mainpage from './components/Mainpage';\r\nimport Navigation from './components/Navigation';\r\nimport Signin from './components/Signin';\r\nimport Register from './components/Register';\r\nimport Icon from './components/Icon';\r\nimport Urlbar from './components/Urlbar';\r\nimport Imagebox from './components/Imagebox';\r\nimport Count from './components/Count';\r\n\r\nconst particleParams = {\r\n\tparticles: {\r\n\t\tnumber: {\r\n\t\t\tvalue:150,\r\n\t\t\tdensity: {\r\n\t\t\t\tenable:true,\r\n\t\t\t\tvalue_area:800\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      nav: '',\r\n      page: 'mainpage',\r\n      box: {},\r\n      url: '',\r\n      success: '',\r\n      detectstate: 'default',\r\n      user: {\r\n              id: '',\r\n              name: '',\r\n              entries: ''\r\n            }\r\n    }\r\n  }\r\n\r\n  Changepage = (pagee) => {\r\n    this.Clean();\r\n    this.setState({page: pagee});\r\n  }\r\n\r\n  Calculation = (data) => {\r\n    const boxy = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    if(boxy) {\r\n      const image = document.getElementById('inputimage');\r\n      const width = Number(image.width);\r\n      const height = Number(image.height);\r\n      return {\r\n          leftcol: boxy.left_col * width,\r\n          toprow: boxy.top_row * height,\r\n          rightcol: width - (boxy.right_col * width),\r\n          bottomrow: height - (boxy.bottom_row * height)\r\n      }\r\n    }\r\n  }\r\n\r\n  boxy = (data) =>{\r\n    this.setState({box: data});\r\n  }\r\n\r\n  Urlchange = (event) => {\r\n    this.setState({url: event.target.value})\r\n    this.setState({box: {}})\r\n  }\r\n\r\n  Clean = () => {\r\n    this.setState({page: 'signin'})\r\n    this.setState({url: ''})\r\n    this.setState({box: {}})\r\n    this.setState({detectstate: 'default'})\r\n    this.setState({user: {\r\n                          id: '',\r\n                          name: '',\r\n                          entries: ''\r\n                         }\r\n                }) \r\n  }\r\n\r\n  Sign_in = (user_data) => {\r\n    if( user_data !== 'invalid creds' ) {\r\n        this.setState( { user: user_data } );\r\n        this.setState({page: 'application'})\r\n    }\r\n  }\r\n\r\n  Registered = (user_data) => {\r\n    if( user_data !== 'invalid creds' ) {\r\n      this.setState( { user: user_data } );\r\n      this.setState({page: 'application'})\r\n    }\r\n  }\r\n\r\n  onDetect = () => {  \r\n    if(this.state.url) {\r\n      this.setState({detectstate: 'yes'})\r\n\r\n        fetch('https://shrouded-shelf-04134.herokuapp.com/apicall',{\r\n                  method: 'post',\r\n                  headers: {'Content-Type': 'application/json'},\r\n                  body: JSON.stringify({\r\n                      url: this.state.url\r\n                    })\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(response => {\r\n          this.boxy(this.Calculation(response))\r\n\r\n          if(this.state.user.id){\r\n            fetch('https://shrouded-shelf-04134.herokuapp.com/image',{\r\n                      method: 'put',\r\n                      headers: {'Content-Type': 'application/json'},\r\n                      body: JSON.stringify({\r\n                            id: this.state.user.id\r\n                      })\r\n            })\r\n            .then(res => res.json())\r\n            .then(entries=> {\r\n                  this.setState(Object.assign(this.state.user,{entries: entries}))\r\n                  this.setState({detectstate: 'default'})\r\n            })\r\n            .catch(err=> console.log('Something wrong in entry count'))\r\n          }\r\n          else{\r\n                this.setState({detectstate: 'default'})\r\n          } \r\n        })\r\n        .catch(err=> {\r\n            this.setState({detectstate: 'no'})\r\n        })\r\n    }\r\n  }\r\n      \r\n\r\n  render() { \r\n    const display = () => {\r\n      switch(this.state.page) {\r\n\r\n        case \"mainpage\":   return (\r\n                                    <>\r\n                                      <Icon />\r\n                                      <Mainpage Changepage={this.Changepage}/>   \r\n                                    </>\r\n                                  );\r\n\r\n        case \"signin\":   return <Signin Changepage={this.Changepage}\r\n                                        Sign_in={this.Sign_in} />;\r\n        \r\n        case \"register\": return <Register Changepage={this.Changepage} \r\n                                          Registered={this.Registered}/>;\r\n                                                 \r\n        case \"application\":  return (\r\n                                      <>\r\n                                        <Navigation Changepage={this.Changepage}\r\n                                                    isUser={this.state.user.name}\r\n                                                    Clean={this.Clean} />\r\n                                        <Icon />\r\n                                        <Count Name={this.state.user.name}\r\n                                               Entries={this.state.user.entries} />\r\n                                        <Urlbar onDetect={this.onDetect}\r\n                                                Urlchange={this.Urlchange} \r\n                                                Detectstate={this.state.detectstate} />\r\n                                          {this.state.url \r\n                                                  ? \r\n                                        <Imagebox Box={this.state.box} \r\n                                                  url={this.state.url} />      \r\n                                                  : \r\n                                                ''\r\n                                          }\r\n                                      </>\r\n                                    );\r\n\r\n        default:      return <h1>Something went wrong. Please refresh the page</h1>\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <>\r\n          <Particles className='particle' params={particleParams} />\r\n          { display() }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'tachyons';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}